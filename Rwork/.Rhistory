iris
tabel(iris$Species)
table(iris$Species)
summary(iris)
iris[[1]]
cafe <- list(espresso = c(4, 5, 3, 6, 5, 4, 7),
americano = c(63, 68, 64, 68, 72, 89, 94),
latte = c(61, 70, 59, 71, 71, 92, 88),
price = c(2.0, 2.5, 3.0),
menu = c('espresso','americano','latte'))
cafe$americano
cafe[[1]]
cafe[['americano']]
type(cafe['americano']) # 리턴 되는 타입이 달라진다
typeof(cafe['americano']) # 리턴 되는 타입이 달라진다
typeof(cafe[['americano']])
cafe$menu <- factor(cafe$menu)
names(cafe$price) <- cafe$menu
?factor
cafe$menu
factor(cafe$menu)
cafe <- list(espresso = c(4, 5, 3, 6, 5, 4, 7),
americano = c(63, 68, 64, 68, 72, 89, 94),
latte = c(61, 70, 59, 71, 71, 92, 88),
price = c(2.0, 2.5, 3.0),
menu = c('espresso','americano','latte'))
cafe$americano # $키를 사용할때 쓰는 방식
cafe$menu
factor(cafe$menu)
names(cafe$price) <- cafe$menu
names(cafe$price)
cafe$menu
names(cafe$price)
names(cafe$price)<- factor(cafe$menu)
names(cafe$price)
sale.espresso <- cafe$price['espresso'] * cafe$espresso
sale.americano <-cafe$price['americano'] * cafe$americano
sale.espresso <- cafe$price['espresso'] * cafe$espresso
sale.americano <-cafe$price['americano'] * cafe$americano
sale.latte <-cafe$price['latte'] * cafe$latte
sale.americano
sale.latte
sale.espresso
sale.day<- sale.americano + sale.espresso + sale.latte
sale.day
rm(list = ls())
install.packages("readxl")
#install.packages("readxl")
library(readxl)
c <- read_excel("excel_exam.xlsx")
c
#install.packages("readxl")
library(readxl)
df_exam <- read_excel("excel_exam.xlsx")
df_exam <- read_excel(".excel_exam.xlsx")
df_exam <- read_excel("/excel_exam.xlsx")
df_exam <- read_excel("excel_exam.xlsx")
rm(list = ls())
df_exam <- read_excel("excel_exam.xlsx")
df_exam <- read_excel("C:\Users\User\Desktop\Rwork\excel_exam.xlsx")
df_exam <- read_excel("C:\Users\User\Desktop\Rwork\excel_exam.xlsx")
df_exam <- read_excel("\excel_exam.xlsx")
df_exam <- read_excel("excel_exam.xlsx")
rm(list = ls())
#install.packages("readxl")
library(readxl)
df_exam <- read_excel("excel_exam.xlsx")
getwd()
getwd()
df_exam <- read_excel("C:\Users\User\Desktop\Rwork\excel_exam.xlsx")
df_exam <- read_excel("C:/Users/User/Desktop/Rwork/excel_exam.xlsx")
str(df_exam
str(df_exam)
str(df_exam)
df_exam[['english']]
summary(df_exam)
df_exam1 <- df_exam
df_exam$class <- as.factor(df_exam1$class)
str(df_exam1)
summary(df_exam1)
rm(list  = ls())
library(ggplot)
library(ggplot2)
data("mpg")
head(mpg)
tail(mpg)
str(df_mpg)
tail(mpg)
df_mpg <- as.data.frame(mpg)
str(df_mpg)
df_mpg
x <- df_mpg$f1
qplot(x)
x
df_mpg <- as.data.frame(mpg)
str(df_mpg)
x <- df_mpg$f1
x
x <- df_mpg$f1
x <- as.factor(df_mpg$f1)
x
data("mpg")
head(mpg)
tail(mpg)
df_mpg <- as.data.frame(mpg)
str(df_mpg)
x <- as.factor(df_mpg$f1)
x
x <- as.factor(df_mpg$fl)
x
qplot(x)
summary(x)
qplot(x, geom = 'bar',main = "연료 종류별 빈도수")
# 연료 종류 빈도수 집계
df <- as.data.frame(table(mpg$fl))
colnames(df) <- c("fl", "count")
# 파이그래프 그리기
ggplot(df, aes(x = "", y = count, fill = fl)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(title = "연료 종류별 비율 (파이그래프)", x = NULL, y = NULL) +
theme_void()
qplot(data = mpg, x = hwy)
qplot(data = mpg, x = dry, y = hwy, geom = "boxplot")
qplot(data = mpg, x = drv, y = hwy, geom = "boxplot")
rm(list  = ls())
library(ggplot2)
data("ChickWeight")
data("chickwts")
head(chickwts)
str(chickwts)
summart(chickwts)
summary(chickwts)
df_ch <- as.data.frame(chickwts)
df_ch
x <- factor(df_ch)
df_ch
ggplot(df_ch)
qplot(data = chichwts, x = feed, y = weight, geom = "boxplot")
qplot(data = chichwts, x = feed, y = weight, geom = "boxplot")
qplot(data = chickwts, x = feed, y = weight, geom = "boxplot")
qplot(data = chickwts, x = feed, y = weight, geom = "boxplot"+geom_bar(stat = "identity", width = 1))
ggplot(chickwts, aes(x = feed, y = weight)) +
geom_boxplot() +
stat_summary(fun = mean, geom = "bar", fill = "lightblue", alpha = 0.3, width = 0.5)
ggplot(chickwts, aes(x = feed, y = weight)) +
geom_boxplot() +
geom_bar(stat = "identity", width = 1)
stat_summary(fun = mean, geom = "bar", fill = "lightblue", alpha = 0.3, width = 0.5)
ggplot(chickwts, aes(x = feed, y = weight)) +
geom_boxplot() +
stat_summary(fun = mean, geom = "bar", fill = "lightblue", alpha = 0.3, width = 0.5)
ggplot(chickwts, aes(x = feed, y = weight, fill = feed)) +
geom_boxplot() +
labs(fill = "Feed Type")  # 범례 제목 설정
df_ch
summary(chickwts)
rm(list  = ls())
library(ggplot2)
data("chickwts")
head(chickwts)
str(chickwts)
summary(chickwts)
df_ch <- as.data.frame(chickwts)
df_ch
ggplot(chickwts, aes(x = feed, y = weight, fill = feed)) +
geom_boxplot() +
labs(fill = "Feed Type")  # 범례 제목 설정
summary(chickwts)
df_ch
by(chickwts$weight, chickwts$feed, summary)
df_ch['sunflower']
chickwts['sunflower']
df_ch$weight['sunflower']
weight['sunflower']
chichkwts$weight
chickwts$weight
rm(list  = ls())
library(ggplot2)
data("chickwts")
head(chickwts)
str(chickwts)
summary(chickwts)
df_ch <- as.data.frame(chickwts)
df_ch
chichkwts
ggplot(chickwts, aes(x = feed, y = weight, fill = feed)) +
geom_boxplot() +
labs(fill = "Feed Type")  # 범례 제목 설정
qplot(data = chickwts, x = feed, y = weight , geom = "boxplot")
by(chickwts$weight, chickwts$feed, summary)
chickwts$weightw
chickwts$weights
data("mtcars")
rm(list  = ls())
data("mtcars")
str(mtcars)
a<- mtcars$mpg
b<- mtcars$hp
cov(a,b)
cor(a,b)
data(irsi)
data(iris)
str(iris)
summary(iris)
table(iris)
table(iris$Species)
table(iris$Species)
iris_num <- iris[,1:4]
iris_num
iris_num <- iris[,1:5]
iris_num
iris_num <- iris[,1:5]
iris_num <- iris[,1:4]
iris_num
cor(iris_num)
install.packages("cor")
?cor
cor(iris_num,method(c('pearson')))
cor(iris_num,method=(c('pearson')))
install.packages("corrplot")
#install.packages("corrplot")
?corrplot
#install.packages("corrplot")
??corrplot
#install.packages("corrplot")
corrplot::corrplot(corr = iris_num)
#install.packages("corrplot")
cor_matrix <- cor(iris_num)
corrplot::corrplot(corr = cor_matrix)
#install.packages("corrplot")
library(corrplot)
cor_matrix <- cor(iris_num)
corrplot::corrplot(corr = cor_matrix)
corrplot::corrplot(corr = cor_matrix,number.cex = iris_num)
corrplot::corrplot(corr = cor_matrix,number.cex = cor_matrix)
corrplot::corrplot(corr = cor_matrix)
corrplot::corrplot(corr = cor_matrix,method = cor_matrix)
corrplot::corrplot(corr = cor_matrix,method= c("circle"))
corrplot::corrplot(corr = cor_matrix,method= c("eclipse"))
corrplot::corrplot(corr = cor_matrix,method= c("number"))
corrplot::corrplot(corr = cor_matrix,method= "number")
install.packages("GGally")
library(GGally)
ggpairs(iris, columns = 1:4, aes(color = Species))
ggpairs(iris, columns = 1:4, mapping = aes(color = species))
ggpairs(iris, columns = 1:4, mapping = aes(color = Species))
rm(list  = ls())
data("mtcars")
str(mtcars)
a<- mtcars$mpg
b<- mtcars$hp
cov(a,b)
cor(a,b)  # 두 변량간에는 음의 상관관계가 강하게나타나다.
# 인과관계는 아니라서 누가 원인결과인지 모른다.(회귀분석을 적용하여 파악해야한다.)
summary(mtcars)
library()
exam <- read.csv("csv_exam.csv")
exam <- read.csv("data/csv_exam.csv")
exam <- read.csv("csv_exam.csv")
dir
list.files()
setwd("C:\Users\User\Desktop\Rwork")
setwd("C:/Users/User/Desktop/Rwork")
exam <- read.csv("csv_exam.csv")
list.files()
View(exam)
View(exam)
str(exam)
head(exam)
summary(exam)
dim(exam)
install.packages("dplyr")
#install.packages("dplyr")
library(dplyr)
library(ggplot)
library(ggplot2)
data(ggplot2::mpg)
library(ggplot2)
data(ggplot2::mpg)
data(mpg)
head(mpg)
str(mpg)
summary(mpg)
ggplot()
ggplot(data = mpg, aex(x= displ, y= )) + geom_point() + labs(title = "배기량 vs 고속도록 연비",x = "배기량(L)" ,y="고속도로 연비(mpg)" )
ggplot(data = mpg, aes(x= displ, y= )) + geom_point() + labs(title = "배기량 vs 고속도록 연비",x = "배기량(L)" ,y="고속도로 연비(mpg)" )
ggplot(data = mpg, aes(x= displ, y=hwp )) + geom_point() + labs(title = "배기량 vs 고속도록 연비",x = "배기량(L)" ,y="고속도로 연비(mpg)" )
ggplot(data = mpg, aes(x= displ, y=hwy )) + geom_point() + labs(title = "배기량 vs 고속도록 연비",x = "배기량(L)" ,y="고속도로 연비(mpg)" )
# 전처리 (정제, 파생변수, 범주화,필터링 //
summary(exam)
exam %>% filter
exam %>% filter(class==1) # ctrl + shift + m = %>%
exam %>% filter(class!=1)
exam %>% filter(class==2)
exam %>% filter(class ==1 & math >=50)
exam %>% filter(class %in% c(1,3,5))
is.na(df)
is.na(exam)
table(is.na(exam))
sum(is.na(exam))
sum(is.na(example()))
sum(is.na(exam$class)
sum(is.na(exam$class))
sum(is.na(exam$class))
sum(is.na(exam))
mean(df$score)
mean(exam$score)
exam %>% filter(c(2,4,))
exam %>% filter(c(2,4))
exam %>% filter(class %in% c(2,4))
%>% summarise(mean_score = mean(math))
exam %>% filter(class %in% c(2,4))
%>% group_by(class)
exam %>% filter(class %in% c(2,4)) %>% group_by(class) %>% summarise(mean_score = mean(math))
exam %>% filter(class %in% c(2,4)) %>% group_by(class) %>% summarise(median_score = mediam(math))
exam %>% filter(class %in% c(2,4)) %>% group_by(class) %>% summarise(median_score = median(math))
exam %>% filter(class %in% c(2,4)) %>% group_by(class) %>% summarise(mean_score = mean(math))
list.dirs()
raw_welfare<-read.spss("Data/Koweps_hpc10_2015_beta1.sav")
install.packages("foreign")
library(foreign)
list.dirs()
raw_welfare<-read.("Data/Koweps_hpc10_2015_beta1.sav")
raw_welfare<-read.spss("Data/Koweps_hpc10_2015_beta1.sav")
raw_welfare<-read.S("Data/Koweps_hpc10_2015_beta1.sav")
install.packages("haven")
library(haven)
data <- read_sav("Data/Koweps_hpc10_2015_beta1.sav")
raw_welfare<-read.spss("Data/Koweps_hpc10_2015_beta1.sav")
raw_welfare<-read.spss("C:/Users/User/Desktop/Rwork/Data/Koweps_hpc10_2015_beta1.sav", to.data.frame = TRUE)
data <- read_sav("C:/Users/User/Desktop/Rwork/Data/Koweps_hpc10_2015_beta1.sav", to.data.frame = TRUE)
data <- read_sav("C:/Users/User/Desktop/Rwork/Data/Koweps_hpc10_2015_beta1.sav")
data <- read_sav("C:/Users/User/Desktop/Rwork/Data/Koweps_hpc10_2015_beta1.sav")
data
raw_welfare
raw_welfare<-read.spss("C:/Users/User/Desktop/Rwork/Data/Koweps_hpc10_2015_beta1.sav", to.data.frame = TRUE)
raw_welfare
rm(list = ls())
rm(list = ls())
#install.packages("foreign")
library(foreign)
list.dirs()
raw_welfare<-read.spss("C:/Users/User/Desktop/Rwork/Data/Koweps_hpc10_2015_beta1.sav", to.data.frame = TRUE)
raw_welfare
summary(welfare)
rm(list = ls())
#install.packages("foreign")
library(foreign)
list.dirs()
raw_welfare<-read.spss("C:/Users/User/Desktop/Rwork/Data/Koweps_hpc10_2015_beta1.sav", to.data.frame = TRUE)
#1. 데이터 불러오기
raw_welfare<-read.spss(file="Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
/
raw_welfare<-read.spss("Data/Koweps_hpc10_2015_beta1.sav", to.data.frame = TRUE)
#1. 데이터 불러오기
raw_welfare<-read.spss(file="Data/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
#install.packages("foreign")
library(foreign)
list.dirs()
#1. 데이터 불러오기
raw_welfare<-read.spss(file="./Data/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
str(raw_welfare)
raw_welfare<-read.spss("Data/Koweps_hpc10_2015_beta1.sav", to.data.frame = TRUE)
#1. 데이터 불러오기
str(raw_welfare)
# 2. 변수 라벨 추출
var_labels <- attr(raw_welfare, "variable.labels")
# 3. 라벨을 CP949 → UTF-8로 변환
converted_labels <- iconv(var_labels, from = "CP949", to = "UTF-8")
# 4. 다시 data에 붙이기
attr(raw_welfare, "variable.labels") <- converted_labels
welfare <- as.data.frame(raw_welfare)
head(welfare)
tail(welfare)
View(welfare)
str(welfare)
summary(welfare)
head(welfare)
View(welfare)
welfare <- raw_welfare
head(welfare)
tail(welfare)
View(welfare)
welfare <- rename(welfare,
sex = h10_g3, # 성별
birth = h10_g4, # 태어난 연도
marriage = h10_g10, # 혼인 상태
religion = h10_g11, # 종교
income = p1002_8aq1, # 월급
code_job = h10_eco9, # 직종 코드
code_region = h10_reg7) # 지역 코드
library(ggplot2)
library(foreign) # SPSS 파일 로드
library(dplyr) # 전처리
library(ggplot2) # 시각화
library(readxl) # 엑셀 파일 불러오기
head(welfare)
welfare <- rename(welfare,
sex = h10_g3, # 성별
birth = h10_g4, # 태어난 연도
marriage = h10_g10, # 혼인 상태
religion = h10_g11, # 종교
income = p1002_8aq1, # 월급
code_job = h10_eco9, # 직종 코드
code_region = h10_reg7) # 지역 코드
welfare <- raw_welfare
welfare <- rename(welfare,
sex = h10_g3, # 성별
birth = h10_g4, # 태어난 연도
marriage = h10_g10, # 혼인 상태
religion = h10_g11, # 종교
income = p1002_8aq1, # 월급
code_job = h10_eco9, # 직종 코드
code_region = h10_reg7) # 지역 코드
head(welfare)
class(welfare$sex)
summary(welfare$sex)
# summary(welfare$sex)
table(welfare$sex)
sum(is.na(welfare$sex))
# 이상치 확인
summary(welfare$sex)
welfare$sex <- ifelse(welfare$sex == 1, "male","female")
welfare$sex
table(welfare$sex)
qplot(welfare$sex)
class(welfare$income)
summary(welfare$income)
qplot(welfare$income)
warnings()
qplot(welfare$income) + xlim(0,1000)
qplot(welfare$income, fill = i("skyblue")) + xlim(0,1000)
qplot(welfare$income, fill = I("skyblue")) + xlim(0,1000)
qplot(welfare$income, fill = I("skyblue"), color = I("black")) + xlim(0,1000)
summary(welfare$income)
welfare$income<- ifelse()
welfare$income<- ifelse(welfare$income %>% c(0,9999))
welfare$income<- ifelse(welfare$income %>% c(0,9999),NA, welfare$income)
summmary(welfare$income)
summary(welfare$income)
table(is.na(welfare$income))
welfare$income<- ifelse(welfare$income %in% c(0,9999),NA, welfare$income)
rm(list = ls())
#install.packages("foreign")
library(foreign) # SPSS 파일 로드
library(dplyr) # 전처리
library(ggplot2) # 시각화
library(readxl) # 엑셀 파일 불러오기
list.dirs()
raw_welfare<-read.spss("Data/Koweps_hpc10_2015_beta1.sav", to.data.frame = TRUE)
#1. 데이터 불러오기
str(raw_welfare)
# 2. 변수 라벨 추출
var_labels <- attr(raw_welfare, "variable.labels")
# 3. 라벨을 CP949 → UTF-8로 변환
converted_labels <- iconv(var_labels, from = "CP949", to = "UTF-8")
# 4. 다시 data에 붙이기
attr(raw_welfare, "variable.labels") <- converted_labels
welfare <- raw_welfare
welfare <- rename(welfare,
sex = h10_g3, # 성별
birth = h10_g4, # 태어난 연도
marriage = h10_g10, # 혼인 상태
religion = h10_g11, # 종교
income = p1002_8aq1, # 월급
code_job = h10_eco9, # 직종 코드
code_region = h10_reg7) # 지역 코드
## "성별에 따라 월급이 다를까?" - 성별, 월급
class(welfare$sex)
# summary(welfare$sex)
table(welfare$sex)
sum(is.na(welfare$sex))
# 이상치 확인
summary(welfare$sex)
welfare$sex <- ifelse(welfare$sex == 1, "male","female")
welfare$sex
table(welfare$sex)
qplot(welfare$sex)
class(welfare$income)
summary(welfare$income)
qplot(welfare$income, fill = I("skyblue"), color = I("black")) + xlim(0,1000)
summary(welfare$income)
welfare$income<- ifelse(welfare$income %in% c(0,9999),NA, welfare$income)
summary(welfare$income)
table(is.na(welfare$income))
sex_income <- welfare
sex_income <- welfare %>% filter(!is.na(income))
View(sex_income)
summary(sex_income
summary(sex_income)
summary(sex_income)
sex_income <- welfare %>% filter(!is.na(income))
summary(sex_income)
dim(sex_income)
sex_income <- welfare %>% filter(!is.na(income)) %>% group_by(sex)
sex_income <- welfare %>% filter(!is.na(income)) %>% group_by(sex) %>%  summarise(mean_income = mean(income))
sex_income
qplot(sex_income)
qplot(sex_income, x = sex, y = mean_inconme)
qplot(sex_income, aex(x = sex, y = mean_income))
qplot(sex_income, aes(x = sex, y = mean_income))
qplot(sex_income, aes(x = sex,y = mean_income))
qplot(x = sex, y = mean_income, data = sex_income)
sex_income
qplot(x = sex, y = mean_income, data = sex_income)
ggplot(data = sexincome)
ggplot(data = sex_income)
ggplot(data = sex_income, aes(x = sex, y= mean_income))
ggplot(data = sex_income, aes(x = sex, y= mean_income)+ barplot())
()
ggplot(data = sex_income, aes(x = sex, y= mean_income)) + geom_col()
